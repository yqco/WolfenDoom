//Kodi's Lazerbeam - reworked by Ozymandias81
ACTOR LaserShooter : SwitchableDecoration
{
	//$Category Hazards (Wolf3D)
	//$Title Laserbeam Shooter (switchable, 3 colors, 4 args)
	//$Color 3
	Radius 0
	Height 0
	+NOGRAVITY

	//$Arg0 "Color"
	//$Arg0Type 11
	//$Arg0Enum { 0 = "Red"; 1 = "Purple"; 2 = "Green"; }
	//$Arg1 "Rotation Speed"
	//$Arg2 "Distance (x256)"
	//$Arg3 "Sound"
	//$Arg3Type 11
	//$Arg3Enum { 0 = "Yes"; 1 = "No"; }
	
	States
	{
	Spawn:
	Active:
		TNT1 A 0 
		TNT1 A 0 A_JumpIf(Args[0] == 1,"PurpleLoop")
		TNT1 A 0 A_JumpIf(Args[0] > 1,"GreenLoop")
		TNT1 A 0 A_JumpIf(Args[3] == 1,"RedLoop")
		TNT1 A 0 A_PlaySound("tesla/loop", CHAN_6, 0.2, TRUE)
	RedLoop:
		TNT1 A 0 A_CustomBulletAttack(0,0,1,100,"MeasurePuff",Args[2]*256,CBAF_AIMFACING | CBAF_EXPLICITANGLE)	//spawns the bullet puff
		TNT1 A 0 A_SpawnItemEx("LaserBeam_Red",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION | SXF_ISTRACER)								//spawns the beam - no need to transfer pitch, we do that later
		TNT1 A 0 A_SetScale(frandom(0.95, 1.05),(GetDistance(1,AAPTR_MASTER)/33.25),AAPTR_TRACER)								//scales the Height by distance to the the puff. "/33.25" is just an approximation for my particular md3 model. This could be done cleaner with a 1-MU tall md3 I suspect.
		TNT1 A 0 A_SetPitch(-pitch+90,0,AAPTR_TRACER)																														//+90 accounts for the md3 actor facing downward in a neutral position. why -pitch instead of +pitch? Lol dunno but it werkz :^)
		TNT1 A 0 A_SetAngle(angle+(Args[1]*0.25),0,AAPTR_DEFAULT)																								//rotates actor that fires the beam - Args1 doesn't have a perfect floating value conversion, but it works (ozy)
		TNT1 A 1
		Loop
	PurpleLoop:
		TNT1 A 0 A_JumpIf(Args[3] == 1,"PickLoop2")
		TNT1 A 0 A_PlaySound("tesla/loop", CHAN_6, 0.2, TRUE)
		PickLoop2:
		TNT1 A 0 A_CustomBulletAttack(0,0,1,100,"MeasurePuff",Args[1]*256,CBAF_AIMFACING | CBAF_EXPLICITANGLE)
		TNT1 A 0 A_SpawnItemEx("LaserBeam_Purple",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION | SXF_ISTRACER)
		TNT1 A 0 A_SetScale(frandom(0.95, 1.05),(GetDistance(1,AAPTR_MASTER)/33.25),AAPTR_TRACER)
		TNT1 A 0 A_SetPitch(-pitch+90,0,AAPTR_TRACER)
		TNT1 A 0 A_SetAngle(angle+(Args[0]*0.25),0,AAPTR_DEFAULT)
		TNT1 A 1
		Loop
	GreenLoop:
		TNT1 A 0 A_JumpIf(Args[3] == 1,"PickLoop3")
		TNT1 A 0 A_PlaySound("tesla/loop", CHAN_6, 0.2, TRUE)
		PickLoop3:
		TNT1 A 0 A_CustomBulletAttack(0,0,1,100,"MeasurePuff",Args[1]*256,CBAF_AIMFACING | CBAF_EXPLICITANGLE)
		TNT1 A 0 A_SpawnItemEx("LaserBeam_Green",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION | SXF_ISTRACER)
		TNT1 A 0 A_SetScale(frandom(0.95, 1.05),(GetDistance(1,AAPTR_MASTER)/33.25),AAPTR_TRACER)
		TNT1 A 0 A_SetPitch(-pitch+90,0,AAPTR_TRACER)
		TNT1 A 0 A_SetAngle(angle+(Args[0]*0.25),0,AAPTR_DEFAULT)
		TNT1 A 1
		Loop
	Inactive:
		TNT1 A -1 A_StopSound(CHAN_6)
		Stop
	}
}

ACTOR LaserBeam_Red
{
	Radius 0 
	Height 0
	+NOBLOCKMAP
	+NOGRAVITY
	+NOINTERACTION
	RenderStyle "Add"
	States
	{
	Spawn:
		TNT1 A 0
		MDLA A 1 BRIGHT
		Stop
	}
}

ACTOR LaserBeam_Purple : LaserBeam_Red {}
ACTOR LaserBeam_Green : LaserBeam_Red {}

ACTOR LaserSpark
{
	Height 1
	Radius 2
	Mass 0
	Speed 0.25
	+FORCEXYBILLBOARD
	+MISSILE
	+NOBLOCKMAP
	Gravity 0.125
	RenderStyle "Add"
	Scale 0.025
	States
	{
	Spawn:
		SPKW E 1 BRIGHT
		Loop
	Death:
		"####" EEEEEEEEEE 1 BRIGHT A_FadeOut(0.1)
		Stop
	}
}

//This actor is only here for one thing: so the actor that fires the laser can measure the distance to whatever it's aiming at,
//allowing it to scale the beam accordingly. You can also make it explode or spawn smoke or something I guess?
ACTOR MeasurePuff : BulletPuff
{
	Radius 0
	Height 0
	VSpeed 0
	Mass 0
	-RANDOMIZE
	+ALWAYSPUFF
	+NOGRAVITY
	+PUFFGETSOWNER //originating actor becomes Target
	+PUFFONACTORS
	States
	{
	Spawn:
		TNT1 A 0 
		"####" A 0 A_SpawnitemEx("MeasurePuffTemp",0,0,0,0,0,0,0,SXF_ISTRACER|SXF_SETMASTER|SXF_NOCHECKPOSITION)
		"####" A 0 A_SpawnitemEx("SparkFlare_W1",random(-2,2), random(-2,2), random(-2,2), random(-2,2), random(-2,2), random(-2,2),0,SXF_ISTRACER|SXF_SETMASTER|SXF_NOCHECKPOSITION)
		"####" A 0 A_TransferPointer(AAPTR_TRACER,AAPTR_TARGET,AAPTR_MASTER,AAPTR_MASTER) //the end result of the above nonsense is that the puffs originator sets the measurepuff as it's master.
		"####" A 0 A_SpawnItemEx("LaserSpark", random(-4,4), random(-4,4), random(-4,4), random(-2,2), random(-2,2), random(-2,2))
		"####" A 0 A_SpawnItemEx("PuffSmoke", random(-4,4), random(-4,4), random(-4,4), 0, 0, 3)
		TNT1 A 1 BRIGHT LIGHT("LAZERZ")
		"####" E 10 A_PlaySound("tesla/loopdeath", CHAN_6, 0.2, TRUE)
		"####" E 0  A_StopSound(CHAN_6)
		Stop
	}
}	

ACTOR MeasurePuffTemp : FastProjectile //does nothing except exist for one tic :^)
{
	States
	{
	Spawn: 
		TNT1 A 0
		"####" A 1
		Stop
	}
}

//this for lulz
/*ACTOR Lasergun : Shotgun replaces Shotgun //needs to be a new weapon instead to inherit shotgun actor if used
{
	States
	{
	Fire:
		TNT1 A 0
		"####" A 0 A_FireBullets(0,0,1,0,"MeasurePuff",FBF_NORANDOMPUFFZ,999999)
		"####" A 0 A_SpawnItemEx("LaserBeam_Green",0,0,30,0,0,0,0,SXF_NOCHECKPOSITION | SXF_ISTRACER)
		"####" A 0 A_SetScale(1,(GetDistance(1,AAPTR_MASTER)/33.25),AAPTR_TRACER)
		"####" A 0 A_SetPitch(-pitch + 90,0,AAPTR_TRACER)
		SHTG A 1
		Goto Ready
	}
}*/