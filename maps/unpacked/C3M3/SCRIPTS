#include "zcommon.acs"

script 101 OPEN //Lightbeam Pitcher
{
		while(0==0)
		{
			SetActorAngle(2, GetActorAngle(2)+0.0005);
			SetActorAngle(3, GetActorAngle(3)+0.0006);
			SetActorAngle(4, GetActorAngle(4)+0.0007);
			SetActorAngle(5, GetActorAngle(5)+0.002);
			SetActorAngle(6, GetActorAngle(6)+0.002);
			SetActorAngle(7, GetActorAngle(7)+0.002);
			delay(1);
		}
}

script 102 OPEN //Skyfire
{
	thing_activate(random(5,6));
	thing_deactivate(7);
	delay(random(35,105));
	thing_deactivate(random(5,6));
	thing_activate(7);
	delay(random(35,105));
	restart;

}

int skybox_light=0;

script 103 OPEN //Skybox Additive Light
{
	skybox_light=random(7,10);
	thing_activate(skybox_light);
	delay(random(20,40));
	thing_deactivate(skybox_light);
	delay(random(35,70));
	restart;
}

script 104 OPEN //First message
{
	delay(70);
	ACS_NamedExecuteAlways("BoADialogue",0,"MS_OFFC1","MS_OFFC0","MARINEAFTERDOUGLESCONV01");
}

script 105 OPEN //Setup
{
	scroll_floor(33, 0, 128, 0);
	scroll_ceiling(33, 0, 128, 0);
	scroll_floor(54, 128, 0, 0);
	scroll_ceiling(54, 128, 0, 0);
}

script 106 OPEN //Sparks
{
	thing_activate(random(90,94));
	delay(random(1,7));
	restart;
}

script 107 (void) //Bunker Quake
{
	Thing_activate(112);
	Radius_Quake(2,70,0,8,111);
	delaY(70);
	Thing_Deactivate(112);
	delaY(35*10);
}

//Tower Door Script
int hodor=0;

script 108 (void)
{
	hodor++;
	if(hodor==2)
	{
		door_open(135, 8, 0);
	}
}


int intSetVolume = 1.0;

Script "SetMusicVolumeFactor" (int intTargetVolume, int intDelay)
{
   intTargetVolume *= 256;

   If (intDelay > 0)
   {
      int intStepSize = (intSetVolume - intTargetVolume) / intDelay;

      For (int i = 0; i <= intDelay; i++)
      {
         SetMusicVolume(intSetVolume - (intStepSize * i));
         Delay(1);
      }
   }

   SetMusicVolume(intTargetVolume);
   intSetVolume = intTargetVolume;
}


script 187 (void)
{
	//Change music
	ACS_NamedExecuteAlways("SetMusicVolumeFactor", 0, 128, 35);
	delay(35);
	SetMusicVolume(1.0);
	
	localsetmusic("music/D_BOSS2.ogg");
	
	//Final message from Cpt. Ryan
	ACS_NamedExecuteAlways("BoADialogue",0,"MS_PRIS1","MS_PRIS0","PRISONERMESSAGE09");
	
	delay(20*35);
	ACS_NamedExecuteAlways("BoADialogue",0,"MS_PRIS1","MS_PRIS0","PRISONERMESSAGE10");
	ACS_Execute(189,0,0,0,0);
}

//Cpt. James Ryan is dead
script 188 (void)
{
	door_open(152, 8, 0);
	SetLineSpecial(153, 0, 0, 0, 0, 0, 0);
	ACS_Terminate(189,0);
	delay(3*35);
	
	ACS_Execute(203, 0, 0, 0, 0);
	delay(2*35);
	
	//Final message from Nash
	ACS_NamedExecuteAlways("BoADialogue",0,"MS_OFFC1","MS_OFFC0","MARINEAFTERDOUGLESCONV02");
	
	//Set Exit Line
	SetLineSpecial(161, 243, 0, 0, 0, 0, 0);
	
	//Repopulate with elite enemies
	SpawnSpotFacingForced("EliteSoldatRifler", 162, 0);
	SpawnSpotFacingForced("EliteAssaulter", 163, 0);
	SpawnSpotFacingForced("EliteFlamer", 164, 0);
	Thing_activate(165);
	Thing_Move(167,160,0);
	Thing_Move(168,169,0);
	SpawnSpotFacingForced("Marine2", 170, 718);
	SetActorProperty(718, APROP_Friendly, 1);
}

//Spawn enemies
script 189 (void)
{
	SpawnSpotFacingForced("GermanShepherd", random(156,159), 0);
	delay(10*35);
	restart;
}

//Sabotage Computer Script
script 190 (int computer_id)
{
	thing_activate(computer_id);
	delay(1);
	thing_deactivate(computer_id);
}

////////////////
// OBJECTIVES //
////////////////

script "OBJECTIVES" OPEN
{
	//Set primary objectives
	ACS_NamedExecuteAlways("boaobjectivesset",0,0,0,"MO_ICON_OPN");
	ACS_NamedExecuteAlways("boaobjectivesset",0,1,0,"MO_C3M3_P1");
	ACS_NamedExecuteAlways("boaobjectivesset",0,0,1,"MO_ICON_OPN");
	ACS_NamedExecuteAlways("boaobjectivesset",0,1,1,"MO_C3M3_P2");
	ACS_NamedExecuteAlways("boaobjectivesset",0,0,2,"MO_ICON_OPN");
	ACS_NamedExecuteAlways("boaobjectivesset",0,1,2,"MO_C3M3_P3");
	//Set secondary objectives
	ACS_NamedExecuteAlways("boaobjectivesset",0,1,3,"MO_C3M3_S1");
	ACS_NamedExecuteAlways("boaobjectivesset",0,0,3,"MO_ICON_OPN");
}

script 201 (void)
{
	//Prim Objective 1 solved
	ACS_NamedExecuteAlways("boaobjectivesset",0,0,0,"MO_ICON_ACC");	
	ACS_NamedExecuteAlways("boaobjectiveaccomplished",0,0,0,0);
	thing_activate(64);
}

script 202 (void)
{
	//Prim Objective 2 solved
	ACS_NamedExecuteAlways("boaobjectivesset",0,0,1,"MO_ICON_ACC");	
	ACS_NamedExecuteAlways("boaobjectiveaccomplished",0,0,0,0);

}

script 203 (void)
{
	//Prim Objective 3 solved
	ACS_NamedExecuteAlways("boaobjectivesset",0,0,2,"MO_ICON_ACC");	
	ACS_NamedExecuteAlways("boaobjectiveaccomplished",0,0,0,0);
}

//////////////////////////////////////
////// Generic Effect Scripts ////////
//////////////////////////////////////

script 402 ENTER	//Setup the player & Map
{
	GiveInventory("Luger9mm",1);
	GiveInventory("KnifeSilent",1);
	SetWeapon("Luger9mm");

	//Moving Water
	scroll_floor(26, 128, 0, 0);
	scroll_ceiling(26, 128, 0, 0);
	scroll_floor(27, 0, -128, 0);
	scroll_ceiling(27, 0, -128, 0);

	//Plane Reflection
	Sector_SetPlaneReflection(104, 32, 0);
	Sector_SetPlaneReflection(105, 48, 0);
	Sector_SetPlaneReflection(106, 64, 0);
}

script 403 OPEN	//Spark Spawner (id 42)
{
	thing_activate(138);
	delay(random(10,20));
	thing_deactivate(138);
	delay(random(35,350));
	restart;
}

script 404 (int vent_id)	//Generic vent breaker script
{
	SetLineBlocking(vent_id,BLOCK_NOTHING);
}

script 405 (int toilet_id)	
{	//Generic Flush Sound WC
	PlaySound(toilet_id,"toilet/flush",CHAN_BODY,1.0,0,0);
}

script 406 (int line_id)	
{	//Generic Mirror Script
	TranslucentLine(line_id,255);
	GlassBreak(0);
	SetLineTexture(line_id,SIDE_FRONT,TEXTURE_MIDDLE,"MIRR_W04");
}

script 407 OPEN	
{	//Water Waggle & Plane Reflection
	Ceiling_Waggle(30,32,16,0,0);
	Sector_SetPlaneReflection(128,20,0);
}

script 408 (int light_tid)	
{	//Generic Light Script
	if(!GetActorProperty(light_tid,APROP_Dormant))
		Thing_Deactivate(light_tid);
	else
		Thing_Activate(light_tid);
	PlaySound(0,"SW_LIGHT");
}

script 409 (void)	
{	//Generic Ladder Script
	ThrustThingZ(0, 15, 0, 0);
	ACS_NamedExecute("Laddersound", 0, 0, 0, 0);
}

script "Laddersound" (void)
{
	PlaySound (0, "world/ladder", CHAN_BODY, 0.71);
	delay(15);
}
